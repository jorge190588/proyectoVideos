version: "3"
services:
  nodejs:
    container_name: videos_nodejs
    build: .
    ports:
      - "8080:8080"
    working_dir: /app
    #command: > bash -c "npm run startProd"
    depends_on:
      - "mysql"
    command: > 
      bash -c "bash /app/wait-for-it.sh; npm run startProd;"
    networks:
      - socatnet
  
  mysql:
    container_name: videos_mysql
    build: 
      context: .
      dockerfile: Dockerfilemysql.dockerfile
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=web --execute \"SHOW DATABASES;\""
      timeout: 20s
      retries: 10
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=ranking_videos
      - MYSQL_USER=tony
      - MYSQL_PASSWORD=dpa\*12d
      - MYSQL_ROOT_PASSWORD=web
    networks:
      - socatnet

networks:
  socatnet:
    #volumes:
    #  - ./app_online:/app

#volumes:
#  app_online:

#bash -c "npm -prefix /web install /web && npm --prefix /web run startProd"
# create only the mysql image docker build -t jsantos/alpine-mysql -f ./Dockerfilemysql.dockerfile .      